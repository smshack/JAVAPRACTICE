package lecture7;
//객체지향이란
//실제 세계를 모델링하여 소프트웨어를 개발하는 방법
//데이터와 절차를 하나의 덩어리로 묶어서 생각

//특징
//1. 캡슐화
/*관련 데이터와 알고리즘이 하나의 묶음으로 정리된 것으로
데이터를 감추고 외부와의 상호작용은 메소드를 통하는 방법*/

//2.상속
/*이미 작성된 클래스를 이어 받아서 새로운 클래스를 생성하는 기법
기존 코드를 재활용해서 사용하는 것을 의미*/

//3. 다형성
/*하나의 이름으로 많은 상황에 대처하는 기법
개념적으로 동일한 작업을 하는 함수들에 똑같은 이름을 부여할 수 있어
코드가 더 간단해지는 효과가 있음
	신뢰성 있는 소프트웨어를 쉽게 작성할 수 있다
	코드를 재사용하기 쉽다
	업그레이드가 쉽다
	디버깅이 쉽다
*/

//장점
/*	코드의 재활용성이 높음
	코딩이 절차지향 보다 간편함
	디버깅이 쉬움*/
	
//단점
/*	처리 속도가 절차지향보다 느림
	설계에 많은 시간 소요가 들어감
*/
	
public class Object_oriented {

}
